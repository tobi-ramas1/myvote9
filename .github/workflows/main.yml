name: Auto Vote

on:
  # schedule:
  #   - cron: '*/3 * * * *'  # Runs every 3 minutes
  # workflow_dispatch:  # Allows manual triggering

jobs:
  vote:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

          # Get Chrome version (full version, e.g., 133.0.6943.126)
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "Chrome version: $CHROME_VERSION"

          # Download ChromeDriver for the exact Chrome version
          CHROMEDRIVER_URL="https://storage.googleapis.com/chrome-for-testing-public/$CHROME_VERSION/linux64/chromedriver-linux64.zip"
          echo "Downloading ChromeDriver from: $CHROMEDRIVER_URL"
          wget -q -O /tmp/chromedriver.zip "$CHROMEDRIVER_URL"

          # Install ChromeDriver
          sudo unzip /tmp/chromedriver.zip -d /tmp/
          sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          sudo rm -rf /tmp/chromedriver-linux64 /tmp/chromedriver.zip

          # Verify ChromeDriver installation
          chromedriver --version

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn

      - name: Connect to ProtonVPN
        run: |
          # Use the config.ovpn file from the .github folder
          cp .github/config.ovpn config.ovpn

          # Debug: Print the content of the .ovpn file
          echo "Content of config.ovpn:"
          cat config.ovpn

          # Write VPN credentials to a file
          echo "${{ secrets.VPN_USERNAME }}" > auth.txt
          echo "${{ secrets.VPN_PASSWORD }}" >> auth.txt

          # Connect to the VPN
          sudo openvpn --config config.ovpn --auth-user-pass auth.txt --daemon
          sleep 10  # Wait for the VPN connection to establish

          # Verify the VPN connection
          curl ifconfig.me  # Print the public IP address

      - name: Run the vote script
        run: |
          python click_button.py

      - name: Disconnect VPN
        run: |
          sudo pkill openvpn || true  # Ignore errors if no OpenVPN process is running
